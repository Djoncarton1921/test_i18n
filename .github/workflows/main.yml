name: Translate locales js

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Read target languages from file
        id: read-languages
        run: |
          echo "::set-output name=languages::$(cat locales-list.txt)"
      - name: Translate with Microsoft Translator
        id: translate
        run: |
          langs=$(sed 's/$/&\&to=/g' locales-list.txt | tr -d '\n' | sed 's/\&to=$//')
          mkdir -p src/i18n
          for file in src/i18n/ua/*.js; do
            filename=$(basename "$file")
            file_content=$(cat "$file")
            target_locale_dir="src/i18n/en"
            target_file="$target_locale_dir/$filename"
            translated_file="src/i18n/$target_lang/$filename"

            # Check if the target file exists
            if [ -f "$target_file" ]; then
              # Compare file contents by checking the presence of identical keys
              identical_keys=1
              while IFS= read -r line; do
                if [[ "$line" =~ ^[[:space:]]*([A-Za-z_]+):.* ]]; then
                  key="${BASH_REMATCH[1]}"
                  if ! grep -q "[[:space:]]*$key:" "$target_file"; then
                    identical_keys=0
                    break
                  fi
                fi
              done < "$file"

              if [ "$identical_keys" -eq 1 ]; then
                # Identical keys found, use the existing translated file
                cp "$target_file" "$translated_file"
                continue
              fi
            fi

            # File has modifications or target file doesn't exist, send for translation
            translated_text=$(curl -s -X POST "https://blanball.cognitiveservices.azure.com/translator/text/v3.0/translate?api-version=3.0&from=uk&to=$langs" \
              -H "Content-Type: application/json" \
              -H "Ocp-Apim-Subscription-Key: a32cf006d7184a00bb73f23b5a9d154a" \
              -d "[
                {
                  \"text\": \"$file_content\"
                }
              ]")
            target_lang=$(echo "$translated_text" | jq -r '.[0].translations[0].to')
            mkdir -p "src/i18n/$target_lang"
            echo "$translated_text" | jq -r '.[0].translations[0].text' > "$translated_file"
            echo "$translated_text"
          done
      - name: Commit files
        id: commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git diff-index --quiet HEAD || git commit -am "Update translations"
      - name: Push changes
        if: steps.commit.outputs.returncode == 0
        uses: ad-m/github-push-action@v0.6.0
        with:
          branch: ${{ github.ref_name }}
          github_token: ${{ secrets.AUTH_TOKEN }}